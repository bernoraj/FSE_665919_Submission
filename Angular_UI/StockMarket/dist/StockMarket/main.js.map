{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/facade.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/addcompany/addcompany.component.ts","./src/app/addcompany/addcompany.component.html","./src/app/app.module.ts","./src/app/snackbar/snackbar.component.ts","./src/app/snackbar/snackbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {FacadeService} from '../facade.service';\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddcompanyComponent} from '../addcompany/addcompany.component';\nimport{SnackbarComponent}from '../snackbar/snackbar.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as _ from 'lodash'\n\nexport interface Company {\n  companyCEO: string;\n  companyCode: number;\n  companyTurnover: number;\n  companyName: string;\n  companyWebsite:string;\n  stockEx:string;\n}\n\nexport interface Stock{\n  companyCode:number;\n  currentDate:string,\n  stockPrice:number\n}\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  displayedColumns: string[] = ['companyCode','companyCEO', 'companyTurnover', 'companyName','companyWebsite','stockEx'];\n  displayedColumnsStock:string[]=['companyCode','currentDate','stockPrice'];\n  dataSource!: MatTableDataSource<Company>;\n  dataSourceStock!:MatTableDataSource<Stock>;\n  selection = new SelectionModel<Company>(false, []);\n  dateRange=false;\n  Minimum=0;\n  Maximum=0;\n  Average=0;\n  listBtnLabel=\"Show all companies\";\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl()\n  });\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n\n  constructor(private facadeService:FacadeService,private datePipe: DatePipe,private dialog: MatDialog,private _snackBar: MatSnackBar) { \n\n\n    \n    this.facadeService.getStats().subscribe((data: Company[] | undefined)=>{\n      this.dataSource=new MatTableDataSource(data);\n    \n    });\n\n    this.selection.changed.subscribe((a) =>\n    {\n        if (a.added[0] && this.range.value.start!=null && this.range.value.end!=null)   // will be undefined if no selection\n        {\n            //alert('You selected ' + a.added[0].companyName);\n            this.dateRange=false;\n           var startDate= this.datePipe.transform(this.range.value.start,\"yyyy-MM-dd\")|| '{}';\n           var endDate=this.datePipe.transform(this.range.value.end,\"yyyy-MM-dd\")|| '{}';\n           this.facadeService.getStock(a.added[0].companyCode.toString(),startDate,endDate).subscribe((data:Stock[]|undefined)=>{\n             \n            this.dataSourceStock=new MatTableDataSource(data);\n            var stockPriceList=(_.map(data, 'stockPrice'));\n            if(stockPriceList!=[]){\n              this.Minimum=_.min(stockPriceList)||0;\n              this.Maximum=_.max(stockPriceList)||0;\n              this.Average=_.mean(stockPriceList)||0;\n            }\n            else{\n              this.Minimum=0;\n              this.Maximum=0;\n              this.Average=0;\n            }\n           });\n        }else{\n          this.dateRange=true;\n        }\n    });\n\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(AddcompanyComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.facadeService.getStats().subscribe((data: Company[] | undefined)=>{\n        this.dataSource=new MatTableDataSource(data);\n        \n      });\n    });\n  }\n\n\n  goToLink(url: string){\n    window.open(url);\n}\n\n  ngOnInit(): void {\n    \n    \n\n\n  }\n  \n\n}\n","\n\n  <div>\n    <mat-toolbar color=\"primary\" class=\"headerBlock\">\n        <img class=\"logo\" src=\"../../assets/Images/logo.png\" alt=\"image\">\n        <h1>Stock Market</h1>\n    </mat-toolbar>\n  </div>\n  \n\n<div class=\"container\">\n   \n    <!-- <div class=\"btn-toolbar btnRight\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n        <div class=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\n         \n         <button class=\"btn btn-info\" mat-button (click)=\"openDialog()\">Add Company</button>\n        </div>\n    </div> -->\n\n    <div class=\"btnGroupies\">\n      <button class=\"btn btn-primary\" mat-button (click)=\"openDialog()\">Add Company</button>\n      <a class=\"btn btn-outline-info\" href=\"http://localhost:8761\" target=\"_blank\">View Eureka Dashboard</a>\n      <a class=\"btn btn-outline-success\" href=\"http://localhost:5601\" target=\"_blank\">View Kibana Dashboard</a>\n     \n     \n    </div>\n\n\n    <div class=\"datePicker\">\n      <p class=\"mat-title text-success\">1) Pick a date </p>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Pick start and end date</mat-label>\n            <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n              <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\n              <input matEndDate formControlName=\"end\" placeholder=\"End date\">\n            </mat-date-range-input>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n          \n            <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n            <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n           \n        </mat-form-field>\n        <span class=\"text-danger\" *ngIf=\"dateRange\">Pick a date first</span>\n    </div>\n\n\n\n    <div class=\"companyTable\">\n      <p class=\"mat-title text-success\">2) Select a company from the table </p>\n      <mat-form-field>\n        <mat-label>Find a company</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Google\" #input>\n      </mat-form-field>\n      \n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"companyCode\">\n          <th mat-header-cell *matHeaderCellDef> Company Code </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.companyCode}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"companyCEO\">\n          <th mat-header-cell *matHeaderCellDef> Company CEO </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.companyCEO}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"companyTurnover\">\n          <th mat-header-cell *matHeaderCellDef> Company Turnover </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.companyTurnover}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"companyName\">\n          <th mat-header-cell *matHeaderCellDef> Company Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.companyName}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"companyWebsite\">\n            <th mat-header-cell *matHeaderCellDef> Company Website </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.companyWebsite}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"stockEx\">\n            <th mat-header-cell *matHeaderCellDef> Stock Exchange </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.stockEx}} </td>\n          </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n     \n      \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n        (click)=\"selection.toggle(row)\" \n        [ngClass]=\"{hovered: row.hovered, highlighted: selection.isSelected(row)}\"\n        (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\">\n        </tr>\n\n      </table>\n    </div>\n\n\n    <div class=\"stockTable\" >\n      <p class=\"mat-title text-success\">3) Stocks recorded for selected company and date range</p>\n        <mat-form-field>\n          <mat-label>Find a stock</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Google\" #input>\n        </mat-form-field>\n        \n        <table mat-table [dataSource]=\"dataSourceStock\" class=\"mat-elevation-z8\">\n        \n         \n          <ng-container matColumnDef=\"companyCode\">\n            <th mat-header-cell *matHeaderCellDef> Company Code </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.companyCode}} </td>\n          </ng-container>\n        \n  \n          <ng-container matColumnDef=\"currentDate\">\n            <th mat-header-cell *matHeaderCellDef> Current Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.currentDate | date}} </td>\n          </ng-container>\n        \n    \n          <ng-container matColumnDef=\"stockPrice\">\n            <th mat-header-cell *matHeaderCellDef> Stock Price </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.stockPrice | currency}} </td>\n          </ng-container>\n        \n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumnsStock\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumnsStock;\"></tr>\n        \n          <!-- Row shown when there is no matching data. -->\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n          </tr>\n  \n     \n          \n          \n  \n        </table>\n      </div>\n\n   \n      <div class=\"stockStats\">\n        <p class=\"mat-title text-success\">4) Min/Max of stocks for selected date range</p>\n        <div class=\"mb-3 row\">\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Min</label>\n            <div class=\"col-sm-10\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"{{Minimum | currency}}\">\n            </div>\n        </div>\n        <hr>\n        <div class=\"mb-3 row\">\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Max</label>\n            <div class=\"col-sm-10\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"{{Maximum | currency}}\">\n            </div>\n        </div>\n        <hr>\n        <div class=\"mb-3 row\">\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Avg</label>\n            <div class=\"col-sm-10\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticEmail\" value=\"{{Average | currency}}\">\n            </div>\n        </div>\n      </div>\n\n\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:9191'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map,catchError, retry  } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacadeService {\n\n  constructor(private http:HttpClient) { }\n\n  getStats():any{\n \n    return this.http.get(API_URL+\"/company/getall\");\n  }\n\n  getStock(companyCode:string,startDate:string,endDate:string):any{\n    return this.http.get(API_URL+\"/stock/get/\"+companyCode+\"/\"+startDate+\"/\"+endDate);\n  }\n\n  addCompany(obj: any):any{\n    const headers = { 'content-type': 'application/json'}  \n    const body=JSON.stringify(obj);\n    console.log(body)\n    return this.http.post(API_URL+\"/company/register\",body,{'headers':headers});\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'StockMarket';\n}\n","\n\n\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {FacadeService} from '../facade.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-addcompany',\n  templateUrl: './addcompany.component.html',\n  styleUrls: ['./addcompany.component.scss']\n})\nexport class AddcompanyComponent implements OnInit {\n  addCompanyForm!: FormGroup;\n  \n  constructor(private facadeService:FacadeService) { }\n\n  ngOnInit(): void {\n    this.addCompanyForm = new FormGroup({\n      'name': new FormControl(null, [Validators.required,Validators.pattern(\"[a-zA-Z ]*\")]),\n      'code': new FormControl(null,[Validators.minLength(5),Validators.required,Validators.pattern(\"[0-9]*\")]),\n      'CEOname': new FormControl(null, [Validators.required,Validators.pattern(\"[a-zA-Z ]*\")]),\n      'website': new FormControl(null, [Validators.required,Validators.pattern(\"[a-z.]*\")]),\n      'turnover': new FormControl(null, [Validators.minLength(11),Validators.required,Validators.pattern(\"[0-9]*\")]),\n      'stockex': new FormControl(null, Validators.required)\n      \n    });\n  }\n\n  onSubmit(){\n    \n    const obj={\n      'companyCode':this.addCompanyForm.value.code,\n      'companyName':this.addCompanyForm.value.name,\n      'companyCEO':this.addCompanyForm.value.CEOname,\n      'companyWebsite':this.addCompanyForm.value.website,\n      'companyTurnover':this.addCompanyForm.value.turnover,\n      'stockEx':this.addCompanyForm.value.stockex\n    }\n\n    this.facadeService.addCompany(obj).subscribe((data:any)=>{\n      \n       if(data){\n          alert(\"Data added Successfully\");\n       }\n    });\n\n  }\n\n}\n","<div class=\"companyContainer\">\n\n\n<h2 mat-dialog-title>Add Company</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <form class=\"companyform\" [formGroup]=\"addCompanyForm\">\n         <mat-form-field class=\"example-full-width\">\n            <mat-label>Company Code</mat-label>\n            <input matInput placeholder=\"Ex. 97176\" required formControlName=\"code\">\n          </mat-form-field>\n\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Company Name</mat-label>\n            <input matInput placeholder=\"Ex. Apple\" required formControlName=\"name\">\n          </mat-form-field>\n\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>CEO Name</mat-label>\n            <input matInput placeholder=\"Ex. Tim Cook\" required formControlName=\"CEOname\">\n          </mat-form-field>\n\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Website</mat-label>\n            <input type=\"url\" matInput placeholder=\"Ex. www.apple.com\" required formControlName=\"website\"> \n          </mat-form-field>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Turnover</mat-label>\n        <input matInput class=\"example-right-align\" placeholder=\"120000000\" required formControlName=\"turnover\">\n        <span matPrefix>$&nbsp;</span>\n        <span matSuffix>.00</span>\n      </mat-form-field>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Stock Exchange</mat-label>\n        <select matNativeControl required formControlName=\"stockex\">\n            <option value=\"\">Select</option>\n            <option value=\"BSE\">BSE</option>\n            <option value=\"NSE\">NSE</option>\n          </select>\n      </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button class=\"btn btn-danger\" mat-button mat-dialog-close>Cancel</button>\n\n    <button type=\"button\" (click)=\"onSubmit()\" mat-dialog-close class=\"btn btn-success cformtbn\" mat-button [disabled]=\"addCompanyForm.invalid\" cdkFocusInitial>Save</button>\n</mat-dialog-actions>\n\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {DatePipe} from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AddcompanyComponent } from './addcompany/addcompany.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    AppComponent,\n    AddcompanyComponent,\n    SnackbarComponent\n  \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    MatRippleModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n  @Input() displayMessage!:string;\n  snackBarMessage=\"\"\n  constructor() { }\n\n  ngOnInit(): void {\n    this.snackBarMessage=this.displayMessage;\n  }\n\n}\n","<span class=\"SnackBar\">\n  Hello Booi  {{snackBarMessage}}\n</span>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nconst routes: Routes = [{\n  path: '',\n  redirectTo: 'Home',\n  pathMatch: 'full'\n}, {\n  path: 'Home',\n  component: HomeComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}